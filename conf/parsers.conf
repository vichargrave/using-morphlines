include "env.conf"

morphlines : [
  {
    id : json
    importCommands : ["org.kitesdk.morphline.**"]
    
    commands : [       
      {
        readJson {}
      }
      {
        extractJsonPaths {
          flatten : false
          paths : {
            tweet_text : "/text"
            tweet_source : "/source"
            tweet_id : "/id_str"
            tweet_user_name: "/user/name"
            tweet_date : "/created_at"
          }
        }
      }
      {
        removeFields {
          blacklist: ["literal:_attachment_body","literal:_attachment_mimetype"]
        }
      }
      {
        logDebug{ format : "output record: {}", args : ["@{}"] }
      }
    ]
  }
  {
    id : syslog
    importCommands : ["org.kitesdk.morphline.**"]

    commands : [
      {
        readLine: {
          charset: "utf-8"
        }
      }
      {
        grok {
            dictionaryFiles : [${dict_path}]
            expressions : {
               message : """<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{SYSLOGHOST:syslog_host}%{SPACE}%{DATA:syslog_program}:%{SPACE}Alert Level:%{SPACE}%{BASE10NUM:Alert_Level};%{SPACE}Rule:%{SPACE}%{BASE10NUM:Rule}%{SPACE}-%{SPACE}%{GREEDYDATA:Description};%{SPACE}Location:%{SPACE}%{GREEDYDATA:Details}"""
            }
            extract : true
            findSubstrings : false
            addEmptyStrings : false
        }
      }
      {
          removeFields {
            blacklist: ["literal:message", "literal:syslog_pri"]
          }
      }
      {
        logDebug{ format : "output record: {}", args : ["@{}"] }
      }
    ]
  }
  {
    id: cef
    importCommands: ["org.kitesdk.morphline.**"]

    commands: [
      {
        readLine: {
          charset: "utf-8"
        }
      }
      {
        grok {
            dictionaryFiles : [${dict_path}]
            expressions : {
               message : """%{SYSLOGTIMESTAMP:timestamp}%{SPACE}<%{DATA:Level}>%{SPACE}%{IP:VIP}%{SPACE}%{DATA:Log_Format}\|%{DATA:Company}\|%{DATA:Appliance}\|%{DATA:Version}\|%{DATA:Module}\|%{DATA:Violation}\|%{BASE10NUM:Severity}\|src=%{IP:Client_IP}%{SPACE}spt=%{BASE10NUM:Client_Port}%{SPACE}method=%{DATA:Method}%{SPACE}request=%{DATA:Request}%{SPACE}msg=%{DATA:Message}%{SPACE}cn1=%{BASE10NUM:Event_ID}%{SPACE}cn2=%{BASE10NUM:HTTP_Return_Code}%{SPACE}cs1=%{DATA:Processed_By1}%{SPACE}cs2=%{DATA:Processed_By2}%{SPACE}cs3=%{DATA:Appfw_Session_ID}%{SPACE}cs4=%{DATA:Security_Severity}%{SPACE}cs5=%{BASE10NUM:Current_Year}%{SPACE}%{GREEDYDATA:Action}"""
            }
            extract : true
            findSubstrings : false
            addEmptyStrings : false
        }
      }
      {
          removeFields {
            blacklist: ["literal:message"]
          }
      }
      {
        logDebug{ format : "output record: {}", args : ["@{}"] }
      }
    ]
  }
]
